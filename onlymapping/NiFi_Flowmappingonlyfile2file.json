{"flowContents":{"identifier":"1a57a25f-bc21-3f3c-a40f-abc651b60357","instanceIdentifier":"0e1373d5-018c-1000-cf53-946bf9bfd152","name":"NiFi Flow","comments":"","position":{"x":0.0,"y":0.0},"processGroups":[],"remoteProcessGroups":[],"processors":[{"identifier":"83e69090-3d02-3a08-ae8e-d7c5a52f18c7","instanceIdentifier":"9f210ed9-ed0a-37a5-d6a4-7fb1c20647f0","name":"Apply ID mapping","comments":"","position":{"x":2672.0,"y":696.0},"type":"org.apache.nifi.processors.script.ExecuteScript","bundle":{"group":"org.apache.nifi","artifact":"nifi-scripting-nar","version":"1.23.2"},"properties":{"Script File":null,"Script Engine":"python","Script Body":"import json\nimport csv\nimport java.io\nimport os\nfrom org.apache.commons.io import IOUtils\nfrom java.nio.charset import StandardCharsets\nfrom org.apache.nifi.processor.io import StreamCallback\nfrom org.apache.nifi.processors.script import ExecuteScript\nfrom org.python.core.util import StringUtil\n\nclass ReplaceIds(StreamCallback):\n  \n  mapping = {}\n  \n  def __init__(self):\n    log.error('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')\n    if os.path.isfile('/home/nifi/mapping.csv'):\n      log.error('found mapping file')\n      with open('/home/nifi/mapping.csv') as csvfile:\n        readFile = csv.reader(csvfile, delimiter=';')\n        for row in readFile:\n          log.error(str(row))\n          if row[0] in self.mapping:\n            self.mapping[row[0]].append([row[1], row[2]])\n          else:\n            self.mapping[row[0]] = [[row[1], row[2]]]\n      log.error('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')\n      log.error(str(self.mapping))\n        \n  def cleanValue(self, value):\n    log.error('cleaning value')\n    log.error('value type')\n    log.error(str(type(value)))\n    if type(value) == str or type(value) == unicode:\n      log.error('value is str')\n      value = value.replace(':', '_').replace('@', '_').replace('?', '_').replace('&', '_').replace('/', '_')\n    log.error(str(value))\n    return value\n\n  def process(self, inputStream, outputStream):\n    # Read input stream as JSON object\n    text = IOUtils.toString(inputStream, StandardCharsets.UTF_8)\n    log.error('dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd')\n    log.error(text)\n    entities = json.loads(text)\n    if type(entities) != list:\n      entities = [entities]\n    mapping = self.mapping;\n    log.error('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')\n    log.error(str(mapping))\n    log.error('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')\n    for entity in entities:\n      for key, value in mapping.items():\n        indexToCheck = []  \n        splittedKey = key.split('/')\n        for split in splittedKey:\n          toCheck = entity\n          for i in indexToCheck:\n            toCheck = toCheck[i]\n          if split.isnumeric():\n            log.error('split is numeric')\n            log.error(split)\n            split = int(split)\n          if type(toCheck) == dict:\n            if split in toCheck.keys():\n              indexToCheck.append(split)\n              tmp = toCheck[split]\n              if type(tmp) == dict and 'type' in tmp.keys():\n                if tmp['type'] == 'Property':\n                  indexToCheck.append('value')\n                elif tmp['type'] == 'Relationship':\n                  indexToCheck.append('object')\n            else:\n              indexToCheck = []\n              break\n          elif type(toCheck) == list and type(split) == int:\n            if len(toCheck) > split:\n              indexToCheck.append(split)\n            else:\n              indexToCheck = []\n              break\n          else:\n            indexToCheck = []\n            break\n        if len(indexToCheck) > 0:\n          toCheck = entity\n          length = len(indexToCheck)\n          log.error('index to check')\n          log.error(str(indexToCheck))\n          log.error('value')\n          log.error(str(value))\n          for mappings in value:\n            log.error('mappings')\n            log.error(str(mappings))\n            found = False\n            for i in range(length):\n              log.error('i')\n              log.error(str(i))\n              index = indexToCheck[i]\n              if i == length - 1:\n                log.error('setting value')\n                if toCheck[index] == mappings[0]:\n                  found = True\n                  if mappings[1] != '':\n                    toCheck[index] = mappings[1]\n                  else:\n                    toCheck[index] = self.cleanValue(toCheck[index])\n                elif mappings[0] == '':\n                  toCheck[index] = self.cleanValue(toCheck[index])\n              else:\n                toCheck = toCheck[index]\n            if found:\n              break\n    log.error('returning')\n    log.error(json.dumps(entities, indent=4))\n    outputStream.write(bytearray(json.dumps(entities, indent=4).encode('utf-8'))) \n\nflowFile = session.get()\nif (flowFile != None):\n  log.error('asdasdasdasdasd')\n  flowfilenamebase = flowFile.getAttribute('filename').split('.')[0] + '_translated.json'\n  log.error('asdasdasdasdasd')\n#  try:\n  log.error('asdasdasdasdasd')\n  tmp = ReplaceIds()\n  flowFile = session.write(flowFile, tmp)\n  log.error('asdasdasdasdasd')\n  log.error('asdasdasdasdasd')\n  flowFile = session.putAttribute(flowFile, \"filename\", flowfilenamebase)\n  print('asdasdasdasdasd')\n  session.transfer(flowFile, REL_SUCCESS)\n  print('asdasdasdasdasd')\n  print('asdasdasdasdasd')\n#  except Exception as e:\n#    # Write error message to NiFi log\n#    log.error(str(e))\n#    log.error(\"Failed to process JSON file\")\n#    # Transfer flow file to failure relationship\n#    session.transfer(flowFile, REL_FAILURE)\nsession.commit()","Module Directory":null},"propertyDescriptors":{"Script File":{"name":"Script File","displayName":"Script File","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"SINGLE","resourceTypes":["FILE"]}},"Script Engine":{"name":"Script Engine","displayName":"Script Engine","identifiesControllerService":false,"sensitive":false},"Script Body":{"name":"Script Body","displayName":"Script Body","identifiesControllerService":false,"sensitive":false},"Module Directory":{"name":"Module Directory","displayName":"Module Directory","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"MULTIPLE","resourceTypes":["DIRECTORY","FILE"]}}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":["failure"],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"1a57a25f-bc21-3f3c-a40f-abc651b60357"},{"identifier":"c4f7a560-0d0d-3536-a195-0928f3ac2365","instanceIdentifier":"40d6226b-e86a-35f8-1271-ab461461f4a4","name":"Make ND","comments":"","position":{"x":3407.717950590265,"y":719.738274311672},"type":"org.apache.nifi.processors.script.ExecuteScript","bundle":{"group":"org.apache.nifi","artifact":"nifi-scripting-nar","version":"1.23.2"},"properties":{"Script File":null,"Script Engine":"python","Script Body":"import json\nimport java.io\nfrom org.apache.commons.io import IOUtils\nfrom java.nio.charset import StandardCharsets\nfrom org.apache.nifi.processor.io import StreamCallback\nfrom org.apache.nifi.processors.script import ExecuteScript\nfrom org.python.core.util import StringUtil\n\nclass PutEntitiesInOneArray(StreamCallback):\n  def __init__(self):\n    pass\n\n  def process(self, inputStream, outputStream):\n    # Read input stream as JSON object\n    text = IOUtils.toString(inputStream, StandardCharsets.UTF_8)\n    outputStream.write(bytearray(text.replace(\"@@@@@\", \"\\n\").encode('utf-8'))) \n\nflowFile = session.get()\nif (flowFile != None):\n    flowfilenamebase = flowFile.getAttribute('filename').split('.')[0] + '_translated.json'\n#  try:\n    flowFile = session.write(flowFile, PutEntitiesInOneArray())\n    flowFile = session.putAttribute(flowFile, \"filename\", flowfilenamebase)\n    session.transfer(flowFile, REL_SUCCESS)\n#  except Exception as e:\n#    # Write error message to NiFi log\n#    log.error(str(e))\n#    log.error(\"Failed to process JSON file\")\n#    # Transfer flow file to failure relationship\n#    session.transfer(flowFile, REL_FAILURE)\nsession.commit()","Module Directory":null},"propertyDescriptors":{"Script File":{"name":"Script File","displayName":"Script File","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"SINGLE","resourceTypes":["FILE"]}},"Script Engine":{"name":"Script Engine","displayName":"Script Engine","identifiesControllerService":false,"sensitive":false},"Script Body":{"name":"Script Body","displayName":"Script Body","identifiesControllerService":false,"sensitive":false},"Module Directory":{"name":"Module Directory","displayName":"Module Directory","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"MULTIPLE","resourceTypes":["DIRECTORY","FILE"]}}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":["failure"],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"1a57a25f-bc21-3f3c-a40f-abc651b60357"},{"identifier":"bbc888b5-7ed7-3c67-90c4-76f26c409023","instanceIdentifier":"a23055bc-a7d4-37c1-dce6-a2f93dd668d1","name":"FetchFile","comments":"","position":{"x":2064.0,"y":832.0},"type":"org.apache.nifi.processors.standard.FetchFile","bundle":{"group":"org.apache.nifi","artifact":"nifi-standard-nar","version":"1.23.2"},"properties":{"Move Conflict Strategy":"Rename","Log level when file not found":"ERROR","Move Destination Directory":"/home/nifi/original","Log level when permission denied":"ERROR","File to Fetch":"${absolute.path}/${filename}","Completion Strategy":"Move File"},"propertyDescriptors":{"Move Conflict Strategy":{"name":"Move Conflict Strategy","displayName":"Move Conflict Strategy","identifiesControllerService":false,"sensitive":false},"Log level when file not found":{"name":"Log level when file not found","displayName":"Log level when file not found","identifiesControllerService":false,"sensitive":false},"Move Destination Directory":{"name":"Move Destination Directory","displayName":"Move Destination Directory","identifiesControllerService":false,"sensitive":false},"Log level when permission denied":{"name":"Log level when permission denied","displayName":"Log level when permission denied","identifiesControllerService":false,"sensitive":false},"File to Fetch":{"name":"File to Fetch","displayName":"File to Fetch","identifiesControllerService":false,"sensitive":false},"Completion Strategy":{"name":"Completion Strategy","displayName":"Completion Strategy","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":["failure","permission.denied","not.found"],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"1a57a25f-bc21-3f3c-a40f-abc651b60357"},{"identifier":"6820ad56-f117-32a9-b4f5-7380869bb50b","instanceIdentifier":"16504f50-ed25-3110-4879-1a4fab86903f","name":"Maken JSON array","comments":"","position":{"x":2224.0,"y":496.0},"type":"org.apache.nifi.processors.script.ExecuteScript","bundle":{"group":"org.apache.nifi","artifact":"nifi-scripting-nar","version":"1.23.2"},"properties":{"Script File":null,"Script Engine":"python","Script Body":"import json\nimport csv\nimport java.io\nimport os\nfrom org.apache.commons.io import IOUtils\nfrom java.nio.charset import StandardCharsets\nfrom org.apache.nifi.processor.io import StreamCallback\nfrom org.apache.nifi.processors.script import ExecuteScript\nfrom org.python.core.util import StringUtil\n\nclass MakeJsonArray(StreamCallback):\n  \n  \n  \n  def __init__(self):\n    log.error('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!')\n        \n\n  def process(self, inputStream, outputStream):\n    # Read input stream as JSON object\n    text = IOUtils.toString(inputStream, StandardCharsets.UTF_8)\n    text = text.replace('\\n', ',')\n    if text[-1] == ',':\n      text = text[:-1]\n    text = '[' + text + ']'\n    outputStream.write(bytearray(text.encode('utf-8'))) \n\nflowFile = session.get()\nif (flowFile != None):\n  log.error('asdasdasdasdasd')\n  flowfilenamebase = flowFile.getAttribute('filename').split('.')[0] + '_translated.json'\n  log.error('asdasdasdasdasd')\n#  try:\n  log.error('asdasdasdasdasd')\n  tmp = MakeJsonArray()\n  flowFile = session.write(flowFile, tmp)\n  log.error('asdasdasdasdasd')\n  log.error('asdasdasdasdasd')\n  flowFile = session.putAttribute(flowFile, \"filename\", flowfilenamebase)\n  print('asdasdasdasdasd')\n  session.transfer(flowFile, REL_SUCCESS)\n  print('asdasdasdasdasd')\n  print('asdasdasdasdasd')\n#  except Exception as e:\n#    # Write error message to NiFi log\n#    log.error(str(e))\n#    log.error(\"Failed to process JSON file\")\n#    # Transfer flow file to failure relationship\n#    session.transfer(flowFile, REL_FAILURE)\nsession.commit()","Module Directory":null},"propertyDescriptors":{"Script File":{"name":"Script File","displayName":"Script File","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"SINGLE","resourceTypes":["FILE"]}},"Script Engine":{"name":"Script Engine","displayName":"Script Engine","identifiesControllerService":false,"sensitive":false},"Script Body":{"name":"Script Body","displayName":"Script Body","identifiesControllerService":false,"sensitive":false},"Module Directory":{"name":"Module Directory","displayName":"Module Directory","identifiesControllerService":false,"sensitive":false,"resourceDefinition":{"cardinality":"MULTIPLE","resourceTypes":["DIRECTORY","FILE"]}}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":["failure"],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"1a57a25f-bc21-3f3c-a40f-abc651b60357"},{"identifier":"1a013aa1-2b59-3835-acd8-96565cd3408e","instanceIdentifier":"82a54e26-0edf-3918-a4ad-3d080da15d2d","name":"ListFile","comments":"","position":{"x":1352.0,"y":528.0},"type":"org.apache.nifi.processors.standard.ListFile","bundle":{"group":"org.apache.nifi","artifact":"nifi-standard-nar","version":"1.23.2"},"properties":{"Minimum File Age":"0 sec","et-initial-listing-target":"all","Maximum File Age":null,"max-listing-time":"3 mins","record-writer":null,"Maximum File Size":null,"et-time-window":"3 hours","et-node-identifier":"${hostname()}","Recurse Subdirectories":"true","File Filter":"[^\\.].*","Path Filter":null,"Include File Attributes":"true","Input Directory Location":"Local","listing-strategy":"timestamps","Input Directory":"/home/nifi/load","target-system-timestamp-precision":"auto-detect","track-performance":"false","max-performance-metrics":"100000","Minimum File Size":"0 B","Ignore Hidden Files":"true","et-state-cache":null,"max-operation-time":"10 secs"},"propertyDescriptors":{"Minimum File Age":{"name":"Minimum File Age","displayName":"Minimum File Age","identifiesControllerService":false,"sensitive":false},"et-initial-listing-target":{"name":"et-initial-listing-target","displayName":"Entity Tracking Initial Listing Target","identifiesControllerService":false,"sensitive":false},"Maximum File Age":{"name":"Maximum File Age","displayName":"Maximum File Age","identifiesControllerService":false,"sensitive":false},"max-listing-time":{"name":"max-listing-time","displayName":"Max Directory Listing Time","identifiesControllerService":false,"sensitive":false},"record-writer":{"name":"record-writer","displayName":"Record Writer","identifiesControllerService":true,"sensitive":false},"Maximum File Size":{"name":"Maximum File Size","displayName":"Maximum File Size","identifiesControllerService":false,"sensitive":false},"et-time-window":{"name":"et-time-window","displayName":"Entity Tracking Time Window","identifiesControllerService":false,"sensitive":false},"et-node-identifier":{"name":"et-node-identifier","displayName":"Entity Tracking Node Identifier","identifiesControllerService":false,"sensitive":false},"Recurse Subdirectories":{"name":"Recurse Subdirectories","displayName":"Recurse Subdirectories","identifiesControllerService":false,"sensitive":false},"File Filter":{"name":"File Filter","displayName":"File Filter","identifiesControllerService":false,"sensitive":false},"Path Filter":{"name":"Path Filter","displayName":"Path Filter","identifiesControllerService":false,"sensitive":false},"Include File Attributes":{"name":"Include File Attributes","displayName":"Include File Attributes","identifiesControllerService":false,"sensitive":false},"Input Directory Location":{"name":"Input Directory Location","displayName":"Input Directory Location","identifiesControllerService":false,"sensitive":false},"listing-strategy":{"name":"listing-strategy","displayName":"Listing Strategy","identifiesControllerService":false,"sensitive":false},"Input Directory":{"name":"Input Directory","displayName":"Input Directory","identifiesControllerService":false,"sensitive":false},"target-system-timestamp-precision":{"name":"target-system-timestamp-precision","displayName":"Target System Timestamp Precision","identifiesControllerService":false,"sensitive":false},"track-performance":{"name":"track-performance","displayName":"Track Performance","identifiesControllerService":false,"sensitive":false},"max-performance-metrics":{"name":"max-performance-metrics","displayName":"Maximum Number of Files to Track","identifiesControllerService":false,"sensitive":false},"Minimum File Size":{"name":"Minimum File Size","displayName":"Minimum File Size","identifiesControllerService":false,"sensitive":false},"Ignore Hidden Files":{"name":"Ignore Hidden Files","displayName":"Ignore Hidden Files","identifiesControllerService":false,"sensitive":false},"et-state-cache":{"name":"et-state-cache","displayName":"Entity Tracking State Cache","identifiesControllerService":true,"sensitive":false},"max-operation-time":{"name":"max-operation-time","displayName":"Max Disk Operation Time","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"1 min","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":[],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"1a57a25f-bc21-3f3c-a40f-abc651b60357"},{"identifier":"4546e1db-11b6-351e-83ef-44da3e693086","instanceIdentifier":"4f737428-7ce8-3fd5-fbc4-e660b1dc8b3a","name":"PutFile","comments":"","position":{"x":3392.0,"y":368.0},"type":"org.apache.nifi.processors.standard.PutFile","bundle":{"group":"org.apache.nifi","artifact":"nifi-standard-nar","version":"1.23.2"},"properties":{"Group":null,"Owner":null,"Create Missing Directories":"true","Permissions":null,"Maximum File Count":null,"Last Modified Time":null,"Directory":"/home/nifi/download","Conflict Resolution Strategy":"fail"},"propertyDescriptors":{"Group":{"name":"Group","displayName":"Group","identifiesControllerService":false,"sensitive":false},"Owner":{"name":"Owner","displayName":"Owner","identifiesControllerService":false,"sensitive":false},"Create Missing Directories":{"name":"Create Missing Directories","displayName":"Create Missing Directories","identifiesControllerService":false,"sensitive":false},"Permissions":{"name":"Permissions","displayName":"Permissions","identifiesControllerService":false,"sensitive":false},"Maximum File Count":{"name":"Maximum File Count","displayName":"Maximum File Count","identifiesControllerService":false,"sensitive":false},"Last Modified Time":{"name":"Last Modified Time","displayName":"Last Modified Time","identifiesControllerService":false,"sensitive":false},"Directory":{"name":"Directory","displayName":"Directory","identifiesControllerService":false,"sensitive":false},"Conflict Resolution Strategy":{"name":"Conflict Resolution Strategy","displayName":"Conflict Resolution Strategy","identifiesControllerService":false,"sensitive":false}},"style":{},"schedulingPeriod":"0 sec","schedulingStrategy":"TIMER_DRIVEN","executionNode":"ALL","penaltyDuration":"30 sec","yieldDuration":"1 sec","bulletinLevel":"WARN","runDurationMillis":0,"concurrentlySchedulableTaskCount":1,"autoTerminatedRelationships":["success","failure"],"scheduledState":"ENABLED","retryCount":10,"retriedRelationships":[],"backoffMechanism":"PENALIZE_FLOWFILE","maxBackoffPeriod":"10 mins","componentType":"PROCESSOR","groupIdentifier":"1a57a25f-bc21-3f3c-a40f-abc651b60357"}],"inputPorts":[],"outputPorts":[],"connections":[{"identifier":"6fec45ba-35de-33fd-9239-8a0fdf51ba3b","instanceIdentifier":"f5fed78a-4c2a-3649-ca0b-3f96956a5947","name":"","source":{"id":"bbc888b5-7ed7-3c67-90c4-76f26c409023","type":"PROCESSOR","groupId":"1a57a25f-bc21-3f3c-a40f-abc651b60357","name":"FetchFile","comments":"","instanceIdentifier":"a23055bc-a7d4-37c1-dce6-a2f93dd668d1"},"destination":{"id":"6820ad56-f117-32a9-b4f5-7380869bb50b","type":"PROCESSOR","groupId":"1a57a25f-bc21-3f3c-a40f-abc651b60357","name":"Maken JSON array","comments":"","instanceIdentifier":"16504f50-ed25-3110-4879-1a4fab86903f"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":10000,"backPressureDataSizeThreshold":"1 GB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"1a57a25f-bc21-3f3c-a40f-abc651b60357"},{"identifier":"6fe4fb93-d4b7-376f-9f53-202dc76cec1a","instanceIdentifier":"9b8c1e01-f1ca-3acb-3146-50e560ef12bf","name":"","source":{"id":"83e69090-3d02-3a08-ae8e-d7c5a52f18c7","type":"PROCESSOR","groupId":"1a57a25f-bc21-3f3c-a40f-abc651b60357","name":"Apply ID mapping","comments":"","instanceIdentifier":"9f210ed9-ed0a-37a5-d6a4-7fb1c20647f0"},"destination":{"id":"c4f7a560-0d0d-3536-a195-0928f3ac2365","type":"PROCESSOR","groupId":"1a57a25f-bc21-3f3c-a40f-abc651b60357","name":"Make ND","comments":"","instanceIdentifier":"40d6226b-e86a-35f8-1271-ab461461f4a4"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":10000,"backPressureDataSizeThreshold":"1 GB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"1a57a25f-bc21-3f3c-a40f-abc651b60357"},{"identifier":"77fc1abc-baf8-3a78-abad-6c41220af0a0","instanceIdentifier":"b88a5c54-38f5-38c7-13ed-b75bfa1e1e4b","name":"","source":{"id":"6820ad56-f117-32a9-b4f5-7380869bb50b","type":"PROCESSOR","groupId":"1a57a25f-bc21-3f3c-a40f-abc651b60357","name":"Maken JSON array","comments":"","instanceIdentifier":"16504f50-ed25-3110-4879-1a4fab86903f"},"destination":{"id":"83e69090-3d02-3a08-ae8e-d7c5a52f18c7","type":"PROCESSOR","groupId":"1a57a25f-bc21-3f3c-a40f-abc651b60357","name":"Apply ID mapping","comments":"","instanceIdentifier":"9f210ed9-ed0a-37a5-d6a4-7fb1c20647f0"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":10000,"backPressureDataSizeThreshold":"1 GB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"1a57a25f-bc21-3f3c-a40f-abc651b60357"},{"identifier":"044fe185-8789-3c80-b927-49da787a4971","instanceIdentifier":"29a9e1e0-a48f-3946-7314-516a98b25454","name":"","source":{"id":"c4f7a560-0d0d-3536-a195-0928f3ac2365","type":"PROCESSOR","groupId":"1a57a25f-bc21-3f3c-a40f-abc651b60357","name":"Make ND","comments":"","instanceIdentifier":"40d6226b-e86a-35f8-1271-ab461461f4a4"},"destination":{"id":"4546e1db-11b6-351e-83ef-44da3e693086","type":"PROCESSOR","groupId":"1a57a25f-bc21-3f3c-a40f-abc651b60357","name":"PutFile","comments":"","instanceIdentifier":"4f737428-7ce8-3fd5-fbc4-e660b1dc8b3a"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":10000,"backPressureDataSizeThreshold":"1 GB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"1a57a25f-bc21-3f3c-a40f-abc651b60357"},{"identifier":"5b59d4fc-5c93-3ba0-be86-dea1895eef99","instanceIdentifier":"07873adf-c532-3aa6-36e1-6da6366030e9","name":"","source":{"id":"1a013aa1-2b59-3835-acd8-96565cd3408e","type":"PROCESSOR","groupId":"1a57a25f-bc21-3f3c-a40f-abc651b60357","name":"ListFile","comments":"","instanceIdentifier":"82a54e26-0edf-3918-a4ad-3d080da15d2d"},"destination":{"id":"bbc888b5-7ed7-3c67-90c4-76f26c409023","type":"PROCESSOR","groupId":"1a57a25f-bc21-3f3c-a40f-abc651b60357","name":"FetchFile","comments":"","instanceIdentifier":"a23055bc-a7d4-37c1-dce6-a2f93dd668d1"},"labelIndex":1,"zIndex":0,"selectedRelationships":["success"],"backPressureObjectThreshold":10000,"backPressureDataSizeThreshold":"1 GB","flowFileExpiration":"0 sec","prioritizers":[],"bends":[],"loadBalanceStrategy":"DO_NOT_LOAD_BALANCE","partitioningAttribute":"","loadBalanceCompression":"DO_NOT_COMPRESS","componentType":"CONNECTION","groupIdentifier":"1a57a25f-bc21-3f3c-a40f-abc651b60357"}],"labels":[],"funnels":[],"controllerServices":[],"variables":{},"defaultFlowFileExpiration":"0 sec","defaultBackPressureObjectThreshold":10000,"defaultBackPressureDataSizeThreshold":"1 GB","componentType":"PROCESS_GROUP","flowFileConcurrency":"UNBOUNDED","flowFileOutboundPolicy":"STREAM_WHEN_AVAILABLE"},"externalControllerServices":{},"parameterContexts":{},"flowEncodingVersion":"1.0","parameterProviders":{},"latest":false}